/*--------------------------------------------------------------
# CUSTOM PROPERTIES
--------------------------------------------------------------*/

:root {
  /* colors */
  --clr-dark: 230 35% 7%;
  --clr-light: 231 77% 90%;
  --clr-white: 0 0% 100%;

  /* font-sizes */
  --fs-900: 9rem;
  --fs-800: 6.25rem;
  --fs-700: 3.5rem;
  --fs-600: 2rem;
  --fs-500: 1.75rem;
  --fs-400: 1.125rem;
  --fs-300: 1rem;
  --fs-200: 0.875rem;

  /* font-families */
  --ff-serif: "Bellefair", serif;
  --ff-sans-cond: "Barlow Condensed", sans-serif;
  --ff-sans-normal: "Barlow", sans-serif;
}

/*--------------------------------------------------------------
## RESET
--------------------------------------------------------------*/

/* https://piccalil.li/blog/a-more-modern-css-reset/ */

/* Box sizing rules */

*,
*::before,
*::after {
  box-sizing: border-box;
}

/* Prevent font size inflation */
html {
  -moz-text-size-adjust: none;
  -webkit-text-size-adjust: none;
  text-size-adjust: none;
}

/* Remove default margin in favour of better control in authored CSS */
body,
h1,
h2,
h3,
h4,
p,
figure,
blockquote,
dl,
dd {
  margin-block-end: 0;
}

h1,
h2,
h3,
h4,
h5,
h6,
p {
  font-weight: 400;
}

/* Remove list styles on ul, ol elements with a list role, which suggests default styling will be removed */
ul[role="list"],
ol[role="list"] {
  list-style: none;
}

/* Set core body defaults */
body {
  font-family: var(--ff-sans-normal);
  font-size: var(--fs-400);
  background-color: hsl(var(--clr-dark));
  color: hsl(var(--clr-white));
  min-height: 100vh;
  line-height: 1.5;
}

/* Set shorter line heights on headings and interactive elements */
h1,
h2,
h3,
h4,
button,
input,
label {
  line-height: 1.1;
}

/* Balance text wrapping on headings */
h1,
h2,
h3,
h4 {
  text-wrap: balance;
}

/* A elements that don't have a class get default styles */
a:not([class]) {
  text-decoration-skip-ink: auto;
  color: currentColor;
}

/* Make images easier to work with */
img,
picture {
  max-width: 100%;
  display: block;
}

/* Inherit fonts for inputs and buttons */
input,
button,
textarea,
select {
  font-family: inherit;
  font-size: inherit;
}

/* Make sure textarea elements without a rows attribute are not tiny */
textarea:not([rows]) {
  min-height: 10em;
}

/* Anything that has been anchored to should have extra scroll margin */
:target {
  scroll-margin-block: 5ex;
}

/* remove animations for people who've turned them off */
@media (prefers-reduced-motion: reduce) {
  *,
  *::before,
  *::after {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
    scroll-behavior: auto !important;
  }
}

/*--------------------------------------------------------------
# UTILITY CLASSES
--------------------------------------------------------------*/

.flex {
  display: flex;
  gap: var(
    --gap,
    1rem
  ); /* undefined local custom property, this can be overwritten for customization */
}

.grid {
  display: grid;
  gap: var(--gap, 1rem);
}

/* Control the flow and rhythm between direct sibling elements */

/* https://piccalil.li/blog/flow-utility/ */

/* .flow > * + * {
  margin-block-start: var(--flow-space, 1em);
} */

/* Modified version of above */
.flow > *:where(:not(:first-child)) {
  margin-top: var(--flow-space, 1rem);
  /* outline: 1px solid red; */
}

.container {
  max-width: 80rem;
  margin-inline: auto;
  padding-inline: 2em;
}

.sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border: 0;
}

/*--------------------------------------------------------------
# COLORS
--------------------------------------------------------------*/

/* If we store the RGB or HSL values in a custom property, it makes it really easy to tweak the alpha value when needed */
/* e.g. background-color: hsl(var(--clr-light) / 0.5); */

.bg-dark {
  background-color: hsl(var(--clr-dark));
}

.bg-accent {
  background-color: hsl(var(--clr-light));
}

.bg-white {
  background-color: hsl(var(--clr-white));
}

.text-dark {
  color: hsl(var(--clr-dark));
}

.text-accent {
  color: hsl(var(--clr-light));
}

.text-white {
  color: hsl(var(--clr-white));
}

/*--------------------------------------------------------------
# TYPOGRAPHY
--------------------------------------------------------------*/

.ff-serif {
  font-family: var(--ff-serif);
}

.ff-sans-cond {
  font-family: var(--ff-sans-cond);
}

.ff-sans-normal {
  font-family: var(--ff-sans-normal);
}

.letter-spacing-1 {
  letter-spacing: 4px;
}

.letter-spacing-2 {
  letter-spacing: 2.7px;
}

.letter-spacing-3 {
  letter-spacing: 2.35px;
}

.uppercase {
  text-transform: uppercase;
}

.fs-900 {
  font-size: var(--fs-900);
}

.fs-800 {
  font-size: var(--fs-900);
}

.fs-700 {
  font-size: var(--fs-700);
}

.fs-600 {
  font-size: var(--fs-600);
}

.fs-500 {
  font-size: var(--fs-500);
}

.fs-400 {
  font-size: var(--fs-400);
}

.fs-300 {
  font-size: var(--fs-300);
}

.fs-200 {
  font-size: var(--fs-200);
}

.fs-900,
.fs-800,
.fs-700,
.fs-600 {
  line-height: 1.1;
}

/*--------------------------------------------------------------
# NUMBERED TITLES
--------------------------------------------------------------*/
.numbered-title {
  font-family: var(--ff-sans-cond);
  font-size: var(--fs-500);
  text-transform: uppercase;
  letter-spacing: 4.72px;
}

.numbered-title span {
  margin-right: 0.5em;
  font-weight: 700;
  color: hsl(var(--clr-white) / 0.25);
}

/*--------------------------------------------------------------
# COMPONENTS
--------------------------------------------------------------*/

.large-button {
  position: relative;
  display: grid;
  z-index: 1;
  place-items: center;
  padding: 0 2em;
  aspect-ratio: 1;
  text-decoration: none;
  border-radius: 50%;
}

.large-button::after {
  content: "";
  position: absolute;
  z-index: -1;
  width: 100%;
  height: 100%;
  background-color: hsl(var(--clr-white) / 0.15);
  border-radius: inherit;
  /* TODO: Try cubic bezier effects */
  transition: opacity 500ms linear, transform 500ms ease-in-out;
  opacity: 0;
}

.large-button:hover::after,
.large-button:focus::after {
  transform: scale(1.5);
  opacity: 1;
}

.primary-navigation {
  --gap: 4rem;
  --underline-gap: 2rem;
  list-style: none;
  padding: 0;
  margin: 0;
}

.primary-navigation a {
  text-decoration: none;
}

.primary-navigation a > span {
  font-weight: 700;
  margin-right: 0.5em;
}

.underline-indicators > * {
  /* background-color: rebeccapurple; */
  border: none;
  padding: var(--underline-gap, 1em) 0;
  border-bottom: 0.2em solid hsl(var(--clr-white) / 0);
}

.underline-indicators > *:hover,
.underline-indicators > *:focus {
  border-bottom-color: hsl(var(--clr-white) / 0.5);
}

.underline-indicators > .active,
.underline-indicators > [aria-selected="true"] {
  color: hsl(var(--clr-white));
  border-bottom-color: hsl(var(--clr-white));
}

.tab-list {
  --gap: 2rem;
}

.dot-indicators > * {
  cursor: pointer;
  border: none;
  border-radius: 50%;
  aspect-ratio: 1;
  padding: 0.5em;
  background-color: hsl(var(--clr-white) / 0.25);
  transition: background-color 300ms linear;
}

.dot-indicators > *:hover,
.dot-indicators > *:focus {
  background-color: hsl(var(--clr-white) / 0.5);
}

.dot-indicators > .active,
.dot-indicators > [aria-selected="true"] {
  background-color: hsl(var(--clr-white) / 1);
}

.number-indicators > * {
  display: grid;
  place-items: center;
  aspect-ratio: 1;
  padding: 0 1em;
  border-radius: 50%;
  cursor: pointer;
  border: 1px solid hsl(var(--clr-white) / 0.25);
  background-color: hsl(var(--clr-white) / 0);
  color: hsl(var(--clr-white));
  transition: border-color 300ms linear;
}

.number-indicators > *:hover,
.number-indicators > *:focus {
  border-color: hsl(var(--clr-white));
}

.number-indicators > .active,
.number-indicators > [aria-selected="true"] {
  background-color: hsl(var(--clr-white) / 1);
  border-color: hsl(var(--clr-white) / 1);
  color: hsl(var(--clr-dark));
}
